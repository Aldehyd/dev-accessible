* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 62.5%;
}

body {
  min-height: 100vh;
  font-family: "Oswald", sans-serif;
}

#root {
  min-height: 100vh;
}

a, a:visited {
  text-decoration: none;
}

ul {
  list-style: none;
}

button, input, textarea {
  font-family: "Oswald", sans-serif;
}

.basic-button-container {
  position: relative;
  z-index: 0;
  width: fit-content;
}
.basic-button-container.disabled {
  opacity: 0.6;
}

.basic-button {
  position: relative;
  padding: 1rem;
  font-size: 1.4rem;
  font-weight: 600;
  background-color: hsl(175deg, 95%, 55%);
  border: none;
  border-radius: 1rem;
  cursor: pointer;
}
.basic-button[aria-disabled=true] {
  cursor: default;
}
.basic-button_text {
  position: relative;
  z-index: 1;
}
.basic-button[aria-disabled=false]:active {
  transform: translate(0.2rem, 0.2rem);
}
.basic-button:not([aria-disabled]):active {
  transform: translate(0.2rem, 0.2rem);
}
.basic-button-shadow {
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 1rem;
  box-shadow: #f1f1f1 0.2rem 0.2rem 0.2rem 0.1rem;
}
.basic-button[aria-disabled=false]:active + .basic-button-shadow {
  transform: scale(0.8);
}
.basic-button:not([aria-disabled]):active + .basic-button-shadow {
  transform: scale(0.8);
}

body.contrast .basic-button {
  border: solid 0.4rem #f1f1f1;
}
body.contrast .basic-button-shadow {
  transform: scale(0);
}
body.contrast .basic-button::after {
  content: "";
  position: absolute;
  z-index: 0;
  top: -0.4rem;
  left: -0.4rem;
  width: 100%;
  height: 100%;
  background-color: #f1f1f1;
  border: solid 0.4rem hsl(175deg, 95%, 55%);
  border-radius: 1rem;
  opacity: 0;
}
body.contrast .basic-button:not([aria-disabled]):hover::after {
  opacity: 1;
}
body.contrast .basic-button[aria-disabled=false]:hover::after {
  opacity: 1;
}
body.contrast .basic-button:not([aria-disabled]):focus::after {
  opacity: 1;
}
body.contrast .basic-button[aria-disabled=false]:focus::after {
  opacity: 1;
}

body.contrast.purple .basic-button::after {
  border-color: hsl(295deg, 95%, 55%);
}

body.purple .basic-button {
  background-color: hsl(295deg, 95%, 55%);
}

body.animations .basic-button {
  transition: 200ms ease-in-out;
}
body.animations .basic-button-shadow {
  transition: 100ms ease-in-out;
}
body.animations .basic-button::after {
  transition: 200ms ease-in-out;
}

.animations-toggle-button {
  position: relative;
  margin: auto;
  padding: 1rem;
  font-size: 1.4rem;
  font-weight: 600;
  background-color: hsl(0deg, 6%, 10%);
  border-radius: 1rem;
  border: solid 0.2rem #f1f1f1;
  cursor: pointer;
}
.animations-toggle-button:hover {
  animation: onHoverButton 1400ms ease-in-out infinite;
}
.animations-toggle-button_overflow-container {
  position: absolute;
  top: 0;
  left: 0;
  padding: 1rem;
  overflow: hidden;
}
.animations-toggle-button_text-container {
  position: absolute;
  top: 1rem;
  left: 10%;
  width: 23rem;
  display: flex;
  flex-direction: row;
  gap: 1.5rem;
  transition: 400ms ease-in-out;
}
.animations-toggle-button_on {
  color: hsl(120deg, 95%, 55%);
  text-shadow: 0px 2px 4px hsl(120deg, 95%, 55%);
}
.animations-toggle-button_off {
  color: hsl(0deg, 95%, 55%);
  text-shadow: 0px 2px 4px hsl(0deg, 95%, 55%);
}
.animations-toggle-button_invisible-text {
  opacity: 0;
}
.animations-toggle-button::before {
  content: "";
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  border-radius: 1rem;
  box-shadow: 0 0 2rem 1rem hsl(0deg, 6%, 10%);
  transform: scale(0.9);
}
.animations-toggle-button:hover::before {
  transform: scale(1);
  animation: onHoverBeforeButton 1400ms ease-in-out infinite;
}

.animations-toggle-button.on .animations-toggle-button_text-container {
  transform: translateX(0);
}

.animations-toggle-button:not(.on) .animations-toggle-button_text-container {
  transform: translateX(-52%);
}

@keyframes onHoverBeforeButton {
  0% {
    transform: scale(0.9);
  }
  50% {
    transform: scale(1);
  }
  100% {
    transform: scale(0.9);
  }
}
.switch-container {
  position: relative;
  width: fit-content;
  background-color: #f1f1f1;
  border-radius: 1rem;
  box-shadow: rgba(0, 0, 0, 0.3) inset 0.5rem 0.5rem 0.5rem;
}
.switch-container::before {
  content: "";
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 1rem;
  background-color: transparent;
  box-shadow: 0 0 1rem hsl(175deg, 95%, 55%);
  transform: scale(0.97, 0.9);
}
.switch-container label {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 0.5rem 1rem;
  font-size: 1.6rem;
  font-weight: bold;
  cursor: pointer;
}

.switch {
  position: relative;
  width: 6.5rem;
  height: 3rem;
  padding: 0.5rem;
  background-color: #000;
  border-radius: 1.5rem;
  border: none;
  cursor: pointer;
  font-size: 1.2rem;
}
.switch-button {
  position: relative;
  display: flex;
  justify-content: space-around;
  align-items: center;
}
.switch_cursor {
  position: absolute;
  top: 0.5rem;
  left: 0.5rem;
  display: inline-block;
  height: 2rem;
  width: 2rem;
  background-color: hsl(175deg, 95%, 55%);
  box-shadow: 0 0 0.4rem hsl(175deg, 95%, 55%);
  border-radius: 50%;
}
.switch_state {
  position: absolute;
  opacity: 1;
  font-weight: bold;
  color: hsl(175deg, 95%, 55%);
  text-shadow: 0 0.2rem 0.4rem hsl(175deg, 95%, 55%);
}
.switch_off {
  right: 1rem;
}
.switch_on {
  left: 1rem;
}
.switch[aria-checked=true] .switch_off {
  display: none;
}
.switch[aria-checked=false] .switch_on {
  display: none;
}

.switch[aria-checked=false] .switch_cursor {
  transform: translateX(0);
}

.switch[aria-checked=true] .switch_cursor {
  transform: translateX(3.5rem);
}

@keyframes onHoverBeforeSwitch {
  0% {
    transform: scale(0.97, 0.9);
  }
  50% {
    transform: scale(1);
  }
  100% {
    transform: scale(0.97, 0.9);
  }
}
@keyframes switchStateAppear {
  from {
    opacity: 0;
  }
}
body.animations .switch-container:hover::before {
  animation: onHoverBeforeSwitch 2000ms ease-in-out infinite;
}
body.animations .switch_cursor {
  transition: transform 200ms ease-in-out;
}
body.animations .switch_state {
  animation: switchStateAppear 400ms ease-in-out forwards;
}

body.contrast .switch_cursor {
  box-shadow: none;
}
body.contrast .switch[aria-checked=false] .switch_cursor {
  background-color: hsl(0deg, 95%, 55%);
}
body.contrast .switch[aria-checked=true] .switch_cursor {
  background-color: hsl(120deg, 95%, 55%);
}
body.contrast .switch_state {
  text-shadow: none;
}
body.contrast .switch_on {
  color: hsl(120deg, 95%, 55%);
}
body.contrast .switch_off {
  color: hsl(0deg, 95%, 55%);
}

.components-layout {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 40px;
  min-height: 100vh;
  padding: 20px;
  background-color: hsl(0deg, 6%, 10%);
}
.components-layout_animation-toggle-buttons-container {
  display: flex;
  justify-content: space-evenly;
}
.components-layout_buttons-container {
  width: 100%;
  display: flex;
  justify-content: space-evenly;
}

/*# sourceMappingURL=style.css.map */
