.infos-dialog {
    // @media screen and (max-width:900px) {
    //     max-width: 90%;
    // }
    // @media screen and (min-width:900px) {
    //     max-width: 810px;
    // }
    position: absolute;
    z-index: 1;
    height: auto;
    width: auto;
    min-width: 300px;
    & .basic-button-container--close-button {
        top: 2rem;
        right: 2rem;
    }
    &_top {
        height: 2rem;
        background-color: map-get($colors,white);
        border: solid map-get($colors,blue);
        border-top-width: 0.4rem;
        border-right-width: 0.4rem;
        border-left-width: 0.4rem;
        border-bottom-width: 0;
        border-radius: 2rem 2rem 0 0;
    }
    &_bottom {
        height: 2rem;
        background-color: map-get($colors,white);
        border: solid map-get($colors,blue);
        border-top-width: 0;
        border-right-width: 0.4rem;
        border-left-width: 0.4rem;
        border-bottom-width: 0.4rem;
        border-radius: 0 0 2rem 2rem;
    }
    &_center {
        background-color: map-get($colors,white);
        border: solid map-get($colors,blue);
        border-top-width: 0;
        border-right-width: 0.4rem;
        border-left-width: 0.4rem;
        border-bottom-width: 0;
        overflow: hidden;
        transform-origin: 50% 0;
    }
    &_content {
        color: map-get($colors,blue);
        opacity: 1;
        transform-origin: 50% 0;
        transform: scaleY(1);
        &-container {
            padding: 1rem;
            margin: 0 1rem;
            background-color: map-get($colors,dark);
            border-radius : 1rem;
        }
        &::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: map-get($colors,dark);
            transform-origin: 50% 100%;
            transform: scaleY(0);
            opacity: 0;
        }
    }
    &_title {
        font-weight: bold;
        margin-bottom: 1rem;
    }
    &_list {
        margin-top: 0.5rem;
        margin-left: 1.5rem;   
    }
}

@keyframes dialogAppear {
    from {
        height: 0;
    }
}
@keyframes dialogContentAppear {
    0% {
        opacity: 0;
    }
    30% {
        filter: blur(10px);
        text-shadow: 0 0.2rem 0.4rem map-get($colors,blue);
    }
    40% {
        filter: blur(0);
    }
    60% {
        filter: blur(5px);
    }
    70% {
        filter: blur(0);
        text-shadow: 0 0.2rem 0.4rem map-get($colors,blue);
    }
    90% {
        filter: brightness(1);
    }
}
@keyframes dialogContentAppearPurple {
    0% {
        opacity: 0;
    }
    30% {
        filter: blur(10px);
        text-shadow: 0 0.2rem 0.4rem map-get($colors,purple);
    }
    40% {
        filter: blur(0);
    }
    60% {
        filter: blur(5px);
    }
    70% {
        filter: blur(0);
        text-shadow: 0 0.2rem 0.4rem map-get($colors,purple);
    }
    90% {
        filter: brightness(1);
    }
}
@keyframes dialogContentProgress {
    from {
        opacity: 1;
        transform: scaleY(1);
    }
}
@keyframes dialogCloseButtonAppear {
    from {
        opacity: 0;
    }
}

body.animations {
    & .basic-button-container--close-button {
        animation: dialogCloseButtonAppear 200ms 600ms ease-in-out backwards;
    }
    & .infos-dialog {
        &_center {
            animation: dialogAppear 300ms  ease-in-out backwards;
        }
        &_content {
            animation: dialogContentAppear 300ms 200ms ease-in-out backwards;
        }
        &_content::after {
            animation: dialogContentProgress 1s 200ms backwards;
        }
    }
    &.purple {
        &_content {
            animation: dialogContentAppearPurple 300ms 200ms ease-in-out backwards;
        }
    }
}
body:not(.contrast) {
    & .infos-dialog {
        &_top {
            box-shadow: map-get($colors,switchBlackBoxShadow) inset 0 0.5rem 0.5rem;
        }
    }
    &.purple {
        & .infos-dialog {
            &_top {
                border-color: map-get($colors,purple);
            }
            &_center {
                border-color: map-get($colors,purple);
            }
            &_bottom {
                border-color: map-get($colors,purple);
            }
            &_content{
                color: map-get($colors,purple);
            }
        }
    }
}